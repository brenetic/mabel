service: sikozu
frameworkVersion: '3'
provider:
  name: aws
  runtime: python3.10
  stage: production
  region: eu-west-2
  environment:
    FIREBASE_PROJECT_ID: ${ssm:sikozu-firebase-project-id}
    FIREBASE_PRIVATE_KEY_ID: ${ssm:sikozu-firebase-private-key-id}
    FIREBASE_PRIVATE_KEY: ${ssm:sikozu-firebase-private-key}
    FIREBASE_CLIENT_EMAIL: ${ssm:sikozu-firebase-client-email}
    FIREBASE_CLIENT_ID: ${ssm:sikozu-firebase-client-id}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - lambda:InvokeFunction
      Resource:
        - arn:aws:lambda:eu-west-2:${ssm:account-number}:function:sikozu-production-slack
        - arn:aws:lambda:eu-west-2:${ssm:account-number}:function:sikozu-production-telegram
functions:
  slack:
    environment:
      SLACK_BOT_TOKEN: ${ssm:sikozu-slack-bot-token}
      SLACK_SIGNING_SECRET: ${ssm:sikozu-slack-signing-secret}
    handler: src/handlers/slack/slack.handler
    events:
      - http:
          path: slack/events
          method: post
          cors: true
  telegram:
    environment:
      TELEGRAM_BOT_TOKEN: ${ssm:sikozu-telegram-bot-token}
      TELEGRAM_ADMIN_USER_ID: ${ssm:sikozu-telegram-admin-user-id}
    handler: src/handlers/telegram/telegram.handler
    events:
      - http:
          path: /telegram/messages
          method: post
package:
  exclude:
    - node_modules/**
    - '**/.pytest_cache/**'
    - '**/__pycache__/**'
plugins:
  - serverless-python-requirements
